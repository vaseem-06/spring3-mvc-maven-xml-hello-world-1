pipeline {

    agent any

    parameters {
        gitParameter branchFilter: 'origin/(.*)', defaultValue: 'origin/master', name: 'BRANCH', type: 'PT_BRANCH'
        booleanParam(defaultValue: false, description: 'Run Maven build', name: 'mvn_build')
        booleanParam(defaultValue: false, description: 'Publish artifact to Nexus', name: 'publish_to_nexus')
    }

    tools {
        // This should match the Maven tool configured in Jenkins
        maven "Maven"
    }

    environment {
        // Nexus configuration
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "13.233.66.167:8081/"
        NEXUS_REPOSITORY = "ncodeit-helloworld"
        NEXUS_CREDENTIAL_ID = "nexus_credentials"
    }

    stages {

        stage("Clone Code") {
            steps {
                script {
                    git branch: "${params.BRANCH}", url: 'https://github.com/betawins/parametirize-job.git'
                }
            }
        }

        stage("Clean Workspace") {
            steps {
                echo "Cleaning old build artifacts..."
                sh 'rm -rf target/*'
            }
        }

        stage("Maven Build") {
            steps {
                script {
                    if (params.mvn_build) {
                        def mvnCmd = '/usr/share/maven/bin/mvn -Dmaven.test.failure.ignore clean package'
                        echo "Running Maven build: ${mvnCmd}"
                        sh mvnCmd
                    } else {
                        echo "Maven build skipped"
                    }
                }
            }
        }

        stage("Publish to Nexus") {
            steps {
                script {
                    if (params.publish_to_nexus) {
                        def pom = readMavenPom file: "pom.xml"
                        def filesByGlob = findFiles(glob: "target/*.${pom.packaging}")
                        def artifactPath = filesByGlob[0]?.path
                        if (artifactPath && fileExists(artifactPath)) {
                            echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}"
                            nexusArtifactUploader(
                                nexusVersion: NEXUS_VERSION,
                                protocol: NEXUS_PROTOCOL,
                                nexusUrl: NEXUS_URL,
                                groupId: pom.groupId,
                                version: "${BUILD_NUMBER}",
                                repository: NEXUS_REPOSITORY,
                                credentialsId: NEXUS_CREDENTIAL_ID,
                                artifacts: [
                                    [artifactId: pom.artifactId, classifier: '', file: artifactPath, type: pom.packaging],
                                    [artifactId: pom.artifactId, classifier: '', file: "pom.xml", type: "pom"]
                                ]
                            )
                        } else {
                            error "*** Artifact ${artifactPath} not found, cannot upload to Nexus"
                        }
                    } else {
                        echo "Nexus upload skipped"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed. Check console output for details."
        }
    }
}
